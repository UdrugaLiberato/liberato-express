generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

model answer {
  id         String    @id(map: "idx_16730_primary") @db.VarChar(255) @default(uuid())
  locationId String?   @map("location_id") @db.VarChar(255)
  answer     Int       @db.SmallInt
  createdAt  DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)
  deletedAt  DateTime? @map("deleted_at") @db.Timestamptz(6)
  questionId String?   @map("question_id") @db.VarChar(255)

  question question? @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_dadd4a251e27f6bf")
  location location? @relation(fields: [locationId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_dadd4a2564d218e")

  @@index([questionId], map: "idx_16730_idx_dadd4a251e27f6bf")
  @@index([locationId], map: "idx_16730_idx_dadd4a2564d218e")
  @@schema("public")
}

model category {
  id          String    @id(map: "idx_16735_primary") @db.VarChar(255) @default(uuid())
  name        String    @unique(map: "idx_16735_uniq_64c19c15e237e06") @db.VarChar(255)
  description String?
  createdAt   DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime? @map("updated_at") @db.Timestamptz(6)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz(6)

  image    image[]
  location location[]
  question question[]

  @@schema("public")
}

model city {
  id         String    @id(map: "idx_16740_primary") @db.VarChar(255) @default(uuid())
  name       String    @unique(map: "idx_16740_uniq_2d5b02345e237e06") @db.VarChar(255)
  latitude   Float
  longitude  Float
  createdAt  DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)
  deletedAt  DateTime? @map("deleted_at") @db.Timestamptz(6)
  radiusInKm Int       @map("radius_in_km")

  location location[]

  @@schema("public")
}

model image {
  id         Int     @id(map: "idx_16745_primary") @default(autoincrement())
  src        String  @db.VarChar(255)
  name       String  @db.VarChar(255)
  mime       String? @db.VarChar(255)
  categoryId String? @map("category_id") @db.VarChar(255)
  locationId String? @map("location_id") @db.VarChar(255)

  category category? @relation(fields: [categoryId], references: [id], onUpdate: NoAction, map: "image_ibfk_1")
  location location? @relation(fields: [locationId], references: [id], onUpdate: NoAction, map: "image_ibfk_2")

  @@index([categoryId], map: "idx_16745_category_id")
  @@index([locationId], map: "idx_16745_location_id")
  @@schema("public")
}

model location {
  id         String    @id(map: "idx_16750_primary") @db.VarChar(255) @default(uuid())
  categoryId String    @map("category_id") @db.VarChar(255)
  userId     String?   @map("user_id") @db.VarChar(255)
  cityId     String    @map("city_id") @db.VarChar(255)
  name       String    @db.VarChar(255)
  street     String    @db.VarChar(255)
  phone      String?   @db.VarChar(255)
  email      String?   @db.VarChar(255)
  published  Int       @db.SmallInt
  featured   Int       @db.SmallInt
  about      String?
  latitude   Float
  longitude  Float
  createdAt  DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)
  deletedAt  DateTime? @map("deleted_at") @db.Timestamptz(6)

  answer   answer[]
  image    image[]
  category category @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_5e9e89cb12469de2")
  city     city     @relation(fields: [cityId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_5e9e89cb8bac62af")
  user     user?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_5e9e89cba76ed395")

  @@index([categoryId], map: "idx_16750_idx_5e9e89cb12469de2")
  @@index([cityId], map: "idx_16750_idx_5e9e89cb8bac62af")
  @@index([userId], map: "idx_16750_idx_5e9e89cba76ed395")
  @@schema("public")
}

model question {
  id         String    @id(map: "idx_16755_primary") @db.VarChar(255) @default(uuid())
  categoryId String?   @map("category_id") @db.VarChar(255)
  question   String    @db.VarChar(255)
  createdAt  DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @map("updated_at") @db.Timestamptz(6)
  deletedAt  DateTime? @map("deleted_at") @db.Timestamptz(6)

  answer   answer[]
  category category? @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_b6f7494e12469de2")

  @@index([categoryId], map: "idx_16755_idx_b6f7494e12469de2")
  @@schema("public")
}

model user {
  id           String    @id(map: "idx_16760_primary") @db.VarChar(255) @default(uuid())
  clerkId      String?   @map("clerk_id") @unique() @db.VarChar(255)
  emailAddress String?   @map("emailaddress") @unique(map: "idx_16760_uniq_8d93d649e7927c74") @db.VarChar(255)
  externalId   String?   @map("externalid") @unique(map: "idx_16760_externalid") @db.VarChar(255)
  lastSignInAt BigInt?   @map("lastsigninat")
  lastActiveAt BigInt?   @map("lastactiveat")
  banned       Boolean?  @default(false)
  phone        String?   @db.VarChar(180)
  roles        String
  password     String    @db.VarChar(255)
  username     String    @db.VarChar(255)
  avatarUrl    String?   @map("avatarurl")
  createdAt    DateTime  @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime? @map("updated_at") @db.Timestamptz(6)
  deletedAt    DateTime? @map("deleted_at") @db.Timestamptz(6)

  location location[]

  @@schema("public")
}
